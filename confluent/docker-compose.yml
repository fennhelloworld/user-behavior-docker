version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.1.1
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:3.1.1
    hostname: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  schema_registry:
    image: confluentinc/cp-schema-registry:3.1.1
    hostname: schema_registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  kafka_rest:
    image: confluentinc/cp-kafka-rest:3.1.1
    hostname: kafka_rest
    depends_on:
      - zookeeper
      - kafka
      - schema_registry
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_DEBUG: 'true'
  ub_connect:
    image: confluentinc/cp-kafka-connect:3.1.1
    hostname: ub_connect
    depends_on:
      - zookeeper
      - kafka
      - schema_registry
      - kafka_rest
    external_links:
      - elastic_elasticsearch_1
    volumes:
      - ./kafka-connect-elasticsearch:/etc/kafka-connect-elasticsearch
      - ./schema-registry:/etc/schema-registry
    command: [
      "connect-standalone", 
      "/etc/schema-registry/ub-connect-avro-standalone.properties", 
      "/etc/kafka-connect-elasticsearch/user-behavior-elasticsearch.properties"
    ]
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: ub_connect
      CONNECT_REST_HOST_NAME: ub_connect
      CONNECT_REST_PORT: 8083
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    networks:
      - default
      - dev3network
  tags_connect:
    image: confluentinc/cp-kafka-connect:3.1.1
    hostname: tags_connect
    depends_on:
      - zookeeper
      - kafka
      - schema_registry
      - kafka_rest
    external_links:
      - elastic_elasticsearch_1
    volumes:
      - ./kafka-connect-elasticsearch:/etc/kafka-connect-elasticsearch
      - ./schema-registry:/etc/schema-registry
    command: [
      "connect-standalone",
      "/etc/schema-registry/tags-connect-avro-standalone.properties",
      "/etc/kafka-connect-elasticsearch/tags-elasticsearch.properties"
    ]
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: tags_connect
      CONNECT_REST_HOST_NAME: tags_connect
      CONNECT_REST_PORT: 8083
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    networks:
      - default
      - dev3network
networks:
  dev3network:
    external: true
